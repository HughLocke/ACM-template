//欧拉回路：一笔画且回到起点
//欧拉路径（欧拉通路）：不要求回到起点
/*
无向图
G存在欧拉通路的充要条件是：G为连通图，并且G仅有两个奇度结点（度数为奇数的顶点）或者无奇度结点。
推论
（1） 当G是仅有两个奇度结点的连通图时，G的欧拉通路必以此两个结点为端点；
（2）当G是无奇度结点的连通图时，G必有欧拉回路
（3）G为欧拉图（存在欧拉回路）的充分必要条件是  G为无奇度结点的连通图
*/
/*
（有向图） 定理
有向图D存在欧拉通路的充要条件是：D为有向图，D的基图连通，并且所有顶点的出度与入度相等；或者  除两个顶点外，其余顶点的出度与入度都相等，而这两个顶点中一个顶点的出度与入度之差为1，另一个顶点的出度与入度之差为-1.
推论
（1）当D除出、入度之差为1，-1的两个顶点之外，其余顶点的出度与入度相等时，D的有向欧拉通路必以出、入度之差为1的顶点作为始点，以出、入度之差为-1的顶点作为终点。
（2）当D的所有顶点的出、入度都相等时，D中存在有向欧拉回路。
（3）有向图D为有向欧拉图的充要条件是  D的基图为连通图，并且所有顶点的出、入度都相等。
*/
//模板：无向图找欧拉路径，字典序最小
//如果不要求字典序，可以采用邻接表
const int maxn = 510;
int N,M,K;
int MAP[maxn][maxn];
int ind[maxn];
vector<int>ans;
void dfs(int t){
    for(int i = 0 ; i < maxn; i ++){
        if(MAP[t][i]){
            MAP[t][i]--; MAP[i][t]--;
            dfs(i);
        }
    }
    ans.pb(t);
}
int main(){
    Sca(M); init();
    int root;
    for(int i = 1; i <= M ; i ++){
        int u,v; Sca2(u,v);
        MAP[u][v]++; MAP[v][u]++;
        ind[u]++; ind[v]++;
        root = v;
    }
    for(int i = 0 ; i < maxn; i ++){
        if(ind[i] & 1){
            root = i;
            break;
        }
    }
    dfs(root);
    for(int i = ans.size() - 1; i >= 0; i --){
        printf("%d\n",ans[i]);
    }
    return 0;
}