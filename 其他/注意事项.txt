！！！！！！！！！！！

1.注意精度问题,尤其是过程中的精度问题，
例如int * int的值大于LL，即使赋值给LL也会炸
例如(1 << 50)是有问题的，需要(1LL << 50)

2.在交题前一定要重新审视一边整个代码，不要心急交题,记得要测两个小样例和极端样例

3.初始化请务必0~N+1,memset容易被卡,手动初始化容易遗漏边界0等问题,以及init记得在主函数里调用，不要调用在N的输入之前

4.读入挂可以尝试但不要迷信,包括inline和register这样的玄学优化，更加多的去寻找算法本身的问题。

5.在遇到莫名其妙不知所云的错误的时候（例如一个值好好的莫名其妙就在中途改变了），很有可能是数组溢出之类的错误

6.如果在想dp状态转移方程的时候始终觉得状态太多存不下，找规律又不怎么找得到的时候，要记得有一那么一类题，当你枚举出起始或者初始的有限个状态的时候，可以递推出后面所有的结果，所以只要枚举 + 验证即可，例如知道了石头剪刀布的结果（是谁赢）就可以推出过程的两个状态

7.如果DP完了之后要求记忆路径的操作很麻烦或者很容易出错，可以考虑在DP的过程中就记录当前状态的前驱

8.如果为了压行去大括号，请务必看清楚大括号里有几句话！！！

9.如果感觉被卡常了且函数里含有形如a.a/a.b<b.a/b.b之类的cmp函数，不妨将结构体的答案a/b直接计算出来比较，每次比较的时候都要计算一下会很费时间

10.结构体排序建议把所有成员的关键字都设置好使得这个排序是稳定的，否则可能会造成奇怪的问题(至于为什么，暂时还不知道)

11.涉及到区间修改的离散化请查阅上面的离散化板子，需要左闭右开的离散化而不能跟个愣头青一样离散化